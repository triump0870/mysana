version: '2'
services:
  mysana-uwsgi:
    image: mysana-uwsgi
    container_name: mysana-uwsgi
    depends_on:
      - mysana-postgres
    ports:
      - "8080:8000"
      - "5000:15672"
    links:
      - mysana-postgres
#      - mysana-rabbit
#      - mysana-redis
    volumes:
      - .:/app/
    env_file: ./src/mysana/settings/local.env
    networks:
      - ${AWS_NETWORK}

  mysana-nginx:
    image: mysana-nginx
    container_name: mysana-nginx
    depends_on:
      - mysana-uwsgi
#    ports:               # Uncomment it to use in Dev
#      - "80:80"
    links:
      - "mysana-uwsgi:mysana-uwsgi"
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    env_file: ./src/mysana/settings/local.env
    environment:
      - UWSGI_URI=mysana-uwsgi:30000
      - "SERVER_NAME=${WEB_HOST}"
      - "VIRTUAL_HOST=${WEB_HOST}"
    networks:
      - ${AWS_NETWORK}

  mysana-postgres:
    image: mysana-postgres
    container_name: mysana-postgres
    ports:
      - "5435:5435"
    volumes_from:
      - mysana-postgres-data
    depends_on:
      - mysana-postgres-data
    env_file: ./src/mysana/settings/local.env
    networks:
      - ${AWS_NETWORK}


  mysana-postgres-data:
    image: postgres:9.5
    container_name: mysana-postgres-data
    volumes:
      - mysana-data:/var/lib/postgresql/data
    entrypoint: /bin/bash
    privileged: true
    networks:
      - ${AWS_NETWORK}

  # Redis
#  mysana-redis:
#    image: redis:2.8.19
#    container_name: mysana-redis
#    hostname: redis
#    networks:
#      - ${AWS_NETWORK}
#
#
#  # RabbitMQ
#  mysana-rabbit:
#    hostname: rabbit
#    image: rabbitmq:3.6.0
#    container_name: mysana-rabbit
#    ports:
#      - "5672:5672"
#      - "6000:15672"
#    environment:
#      - "VIRTUAL_HOST=rabbit.${WEB_HOST}"
#      - RABBITMQ_DEFAULT_USER=admin
#      - RABBITMQ_DEFAULT_PASS=rohan123
#    networks:
#      - ${AWS_NETWORK}

volumes:
  mysana-data:
    external: true

networks:
  {{AWS_NETWORK}}:
    external: true
